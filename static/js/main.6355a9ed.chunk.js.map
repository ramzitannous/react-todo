{"version":3,"sources":["containers/Dashboard/actions.js","containers/RemoteTodo/actions.js","containers/RemoteTodo/reducers.js","containers/Login/actions.js","containers/Login/reducers.js","reducers.js","containers/Dashboard/reducers.js","store.js","components/Header/Header.jsx","components/AddTodo/AddTodo.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","containers/Dashboard/Dashboard.jsx","containers/RemoteTodo/RemoteTodo.jsx","router.js","containers/Login/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","addTodo","todo","type","payload","removeTodo","index","clearAll","searchTodo","text","disableSearch","getTodos","dispatch","fetch","then","res","json","LOGIN_ACTIONS","LOGIN","makeActionCreator","LOGOUT","getLogged","localStorage","getItem","TYPE","loginReducer","makeReducer","state","loggedIn","username","_","defaultState","RootReducer","combineReducers","localTodo","action","newState","Object","assign","searchMode","title","id","todoList","length","arr","splice","filteredList","filter","remoteTodo","loading","responseBody","login","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","createStore","Header","React","useState","setText","useDispatch","history","useHistory","useEffect","Navbar","bg","Brand","href","src","width","height","className","Nav","to","placeholder","onSubmit","onChange","event","target","value","Button","onClick","disabled","clear","replace","AddTodo","TodoItem","ListGroup","Item","key","TodoList","todos","clearAllTodos","variant","map","Dashboard","connect","props","ProgressContainer","Spinner","animation","RemoteTodo","fetchTodo","routes","path","component","privateRoute","setUsername","password","setPassword","error","setError","setItem","Toast","style","position","bottom","right","show","Body","Form","Group","Label","Control","e","AppRouterContainer","useSelector","basename","process","route","exact","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6355a9ed.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n    ADD_TODO: \"add-todo\",\n    REMOVE_TODO: \"remove-todo\",\n    CLEAR_TODO: \"clear-todo\",\n    SEARCH_TODO: \"search-todo\",\n    DISABLE_SEARCH: \"disable-search\"\n}\n\n\nexport const addTodo = todo => ({\n    type: ACTION_TYPES.ADD_TODO,\n    payload: todo\n})\n\nexport const removeTodo = index => ({\n    type: ACTION_TYPES.REMOVE_TODO,\n    index\n})\n\nexport const clearAll = () => ({\n    type: ACTION_TYPES.CLEAR_TODO\n})\n\nexport const searchTodo = (text) => ({\n    type: ACTION_TYPES.SEARCH_TODO,\n    payload: text\n\n})\n\nexport const disableSearch = () => ({\n    type: ACTION_TYPES.DISABLE_SEARCH\n})","export const ACTION_TYPES = {\n    FETCH_STARTED: \"fetch-start\",\n    FETCH_END: \"fetch-end\"\n}\n\nexport const startFetching = () => {\n    return {\n        type: ACTION_TYPES.FETCH_STARTED\n    }\n}\n\nexport const endFetch = (jsonResponseTodo) => {\n    return {\n        type: ACTION_TYPES.FETCH_END,\n        payload: jsonResponseTodo\n    }\n}","import {ACTION_TYPES, endFetch, startFetching} from \"./actions\";\n\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/todos\"\n\nexport const getTodos = () => {\n    return function (dispatch) {\n        dispatch(startFetching())\n        fetch(BASE_URL).then(res => res.json()).then(res => {\n            dispatch(endFetch(res))\n        })\n    }\n}\nexport const remoteTodoReducer = (state, action) => {\n    const newState = Object.assign({}, state)\n\n    switch (action.type) {\n        case ACTION_TYPES.FETCH_STARTED:\n            newState.loading = true\n            break\n        case ACTION_TYPES.FETCH_END:\n            newState.loading = false\n            newState.responseBody = action.payload\n            break\n        default:\n            newState.responseBody = []\n            newState.loading = false\n    }\n    return newState\n}\n","import {makeActionCreator} from \"redux-toolbelt\";\n\nexport const LOGIN_ACTIONS = {\n    LOGIN: makeActionCreator(\"login\"),\n    LOGOUT: makeActionCreator(\"logout\")\n}\n\n\nexport const setLogged = () => {\n    localStorage.setItem(LOGIN_ACTIONS.LOGIN.TYPE, \"true\")\n}\n\nexport const getLogged = () => {\n    return localStorage.getItem(LOGIN_ACTIONS.LOGIN.TYPE) === \"true\"\n}\n","import {getLogged, LOGIN_ACTIONS} from \"./actions\";\nimport {makeReducer} from \"redux-toolbelt\"\n\nexport const loginReducer = makeReducer({\n    [LOGIN_ACTIONS.LOGIN.TYPE]: (state, {payload}) => ({...state, loggedIn: true, username: payload.username}),\n    [LOGIN_ACTIONS.LOGOUT.TYPE]: (state, _) => ({...state, loggedIn: false, username: null}),\n}, {\n    defaultState: {loggedIn: getLogged()}\n})\n","import {combineReducers} from \"redux\";\nimport {localTodoReducer} from \"./containers/Dashboard/reducers\";\nimport {remoteTodoReducer} from \"./containers/RemoteTodo/reducers\";\nimport {loginReducer} from \"./containers/Login/reducers\";\n\nconst RootReducer = combineReducers({\n    localTodo: localTodoReducer,\n    remoteTodo: remoteTodoReducer,\n    login: loginReducer\n})\n\nexport default RootReducer;","import {ACTION_TYPES} from \"./actions\";\n\n// get the new state based on action and previous state\nexport const localTodoReducer = (state, action) => {\n    let newState = Object.assign({}, state)\n    newState.searchMode = false\n    switch (action.type) {\n        case ACTION_TYPES.ADD_TODO:\n            const todo = {title: action.payload, id: newState.todoList.length}\n            newState.todoList = [...newState.todoList, todo]\n            break\n        case ACTION_TYPES.REMOVE_TODO:\n            const arr = [...newState.todoList]\n            arr.splice(action.index, 1)\n            newState.todoList = arr\n            break\n        case ACTION_TYPES.CLEAR_TODO:\n            newState.todoList = []\n            break\n        case ACTION_TYPES.SEARCH_TODO:\n            newState.filteredList = newState.todoList.filter(todo => todo.title === action.payload)\n            newState.searchMode = true\n            break\n        case ACTION_TYPES.DISABLE_SEARCH:\n            break;\n        default:\n            newState.todoList = []\n            break;\n    }\n    return newState\n}\n","import {applyMiddleware, compose, createStore} from \"redux\"\nimport RootReducer from \"./reducers\";\nimport thunkMiddleware from 'redux-thunk'\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(thunkMiddleware),\n);\nconst store = createStore(RootReducer, enhancer)\nexport default store\n","import React from \"react\";\nimport {Nav, Navbar, Button } from \"react-bootstrap\"\nimport \"./Styles.css\"\nimport {Link} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport { useHistory } from \"react-router-dom\"\nimport {LOGIN_ACTIONS} from \"../../containers/Login/actions\";\n\nexport const Header = ({disableSearch, searchTodo}) => {\n    const [text, setText] = React.useState(\"\")\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    React.useEffect(() => {\n        if (text.length === 0) {\n            disableSearch()\n        }\n    }, [text, disableSearch])\n\n    const onChangeTodo = (event) => {\n        setText(event.target.value)\n\n    }\n\n    const logOut = () => {\n        dispatch(LOGIN_ACTIONS.LOGOUT())\n        localStorage.clear()\n        history.replace(\"/login\")\n    }\n\n    return (\n        <>\n            <Navbar bg=\"light\" >\n                <Navbar.Brand href=\"#home\">\n                    <img\n                        src=\"/logo512.png\"\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />\n                </Navbar.Brand>\n                <Navbar.Brand>{\"Todo APP\"}</Navbar.Brand>\n\n                <Nav>\n                    <Link to={\"/dashboard\"} className=\"nav-link\">Dashboard</Link>\n                   <Link to={\"/remote\"} className=\"nav-link\">Remote</Link>\n                </Nav>\n\n\n                <div className=\"flex-row d-flex ml-auto\">\n                    <input placeholder={\"Search Todo\"}\n                           onSubmit={() => searchTodo(text)}\n                           onChange={onChangeTodo}\n                           value={text}\n                           className={\"searchInput form-control\"}/>\n\n                    <Button\n                        onClick={() => searchTodo(text)}\n                        disabled={text.length === 0}\n                    >\n                        {\"Search\"}\n                    </Button>\n\n                    <Button\n                        className=\"ml-3\"\n                        onClick={logOut}\n                    >\n                        {\"LogOut\"}\n                    </Button>\n                </div>\n            </Navbar>\n        </>\n    )\n}\n","import {Button} from \"react-bootstrap\"\nimport React from \"react\";\n\nexport const AddTodo = ({addTodo}) => {\n    const [text, setText] = React.useState(\"\")\n\n    const changeText = event => {\n        setText(event.target.value)\n    }\n\n    const addTodoToList = () => {\n        addTodo(text)\n        setText(\"\")\n    }\n\n\n    return (\n        <div className=\"p-5\">\n            <div className=\"form-group\">\n                <label className=\"form-check-label\">{\"Add Todo\"}</label>\n                <input value={text} className=\"form-control\" placeholder=\"Enter A Todo\" onChange={changeText} />\n            </div>\n            <Button onClick={addTodoToList}\n                    disabled={text.length === 0}>Add</Button>\n        </div>\n)\n}","import {Button, ListGroup} from \"react-bootstrap\";\nimport React from \"react\";\n\nexport const TodoItem = ({title, id, removeTodo, index}) => {\n    return (\n        <ListGroup.Item key={`${title}-${id}`}>\n            <div className=\"d-flex flex-row justify-content-between\">\n                <span>{`${id + 1}. ${title}`}</span>\n                <Button onClick={() => removeTodo(index)}>Delete</Button>\n            </div>\n        </ListGroup.Item>\n    )\n}","import React from \"react\";\nimport {Button, ListGroup} from \"react-bootstrap\"\nimport {TodoItem} from \"../TodoItem\";\n\nexport const TodoList = ({todos, removeTodo, clearAllTodos}) => {\n\n    const renderList = () => {\n        if (todos.length === 0) {\n            return (\n                <div className=\"w-100 d-flex justify-content-center align-items-center\">\n                    <span>{\"No Todos\"}</span>\n                </div>\n            )\n        }\n        return (\n            <div className=\"border-primary border p-2\">\n                <Button className=\"mb-3\" variant=\"danger\" onClick={clearAllTodos}>{\"clear\"}</Button>\n                <ListGroup>\n                    {todos.map((value, index) => (<TodoItem title={value.title}\n                                                            key={index}\n                                                            id={value.id}\n                                                            index={index}\n                                                            removeTodo={removeTodo}\n                    />))}\n                </ListGroup>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\"w-100 p-5\"}>\n            {renderList()}\n        </div>\n    )\n}","import {Header} from \"../../components/Header\";\nimport {AddTodo} from \"../../components/AddTodo/AddTodo\";\nimport {TodoList} from \"../../components/TodoList\";\nimport React from \"react\";\nimport {addTodo, clearAll, disableSearch, removeTodo, searchTodo} from \"./actions\"\nimport {connect} from \"react-redux\";\n\nconst DashboardContainer = (props) => {\n    return (\n        <div>\n            <Header disableSearch={props.disableSearch} searchTodo={props.searchTodo}\n                    username={props.username}/>\n            <AddTodo addTodo={props.addTodo}/>\n            <TodoList clearAllTodos={props.clearAllTodos} removeTodo={props.removeTodo}\n                      todos={props.todos}/>\n        </div>\n    )\n}\n\nconst mapStates = ({localTodo, login}) => {\n    return {\n        todos: localTodo.searchMode ? localTodo.filteredList: localTodo.todoList,\n        username: login.username\n    }\n}\n\nconst mapDispatches = (dispatch) => ({\n    addTodo: (text) => dispatch(addTodo(text)),\n    searchTodo: text => dispatch(searchTodo(text)),\n    disableSearch: () => dispatch(disableSearch()),\n    removeTodo: (index) => dispatch(removeTodo(index)),\n    clearAllTodos: () => dispatch(clearAll())\n})\n\nexport const Dashboard = connect(mapStates, mapDispatches)(DashboardContainer)","import {Header} from \"../../components/Header\";\nimport {AddTodo} from \"../../components/AddTodo/AddTodo\";\nimport {TodoList} from \"../../components/TodoList\";\nimport React from \"react\";\nimport {Spinner} from \"react-bootstrap\";\nimport {addTodo, clearAll, disableSearch, removeTodo, searchTodo} from \"../Dashboard/actions\";\nimport {connect} from \"react-redux\";\nimport {getTodos} from \"./reducers\";\n\nconst ProgressContainer = () => (\n    <div className=\"w-100 p-100 d-flex justify-content-center align-items-center\">\n        <Spinner animation=\"border\" variant={\"primary\"} />\n    </div>\n)\nexport const RemoteTodoContainer = (props) => {\n    React.useEffect(() =>\n    {\n        props.fetchTodo()\n    }, [props.fetchTodo])\n\n    return (\n        <div>\n            <Header disableSearch={props.disableSearch} searchTodo={props.searchTodo}/>\n            <AddTodo addTodo={props.addTodo}/>\n            {props.loading ? <ProgressContainer/> :  <TodoList clearAllTodos={props.clearAllTodos}\n                                                               removeTodo={props.removeTodo}\n                                                               todos={props.todos}/>}\n\n        </div>\n    )\n}\nconst mapStates = ({remoteTodo}) => {\n    return {\n        todos: remoteTodo.responseBody,\n        loading: remoteTodo.loading\n    }\n}\n\nconst mapDispatches = (dispatch) => ({\n    addTodo: (text) => dispatch(addTodo(text)),\n    searchTodo: text => dispatch(searchTodo(text)),\n    disableSearch: () => dispatch(disableSearch()),\n    removeTodo: (index) => dispatch(removeTodo(index)),\n    clearAllTodos: () => dispatch(clearAll()),\n    fetchTodo: () => dispatch(getTodos()),\n})\n\nexport const RemoteTodo = connect(mapStates, mapDispatches)(RemoteTodoContainer)","import React from \"react\";\nimport {BrowserRouter, Route, Redirect} from \"react-router-dom\"\nimport {Dashboard} from \"./containers/Dashboard\";\nimport {RemoteTodo} from \"./containers/RemoteTodo\";\nimport {Login} from \"./containers/Login\";\nimport { useSelector } from \"react-redux\";\n\nconst routes = [\n    {\n        path: [\"/dashboard\", \"/\"],\n        component: Dashboard,\n        privateRoute: true\n    },\n    {\n        path: \"/remote\",\n        component: RemoteTodo,\n        privateRoute: true\n    },\n    {\n        path: \"/login\",\n        component: Login,\n        privateRoute: false\n    }\n]\n\n\nexport const AppRouterContainer = () => {\n    const loggedIn = useSelector(state => state.login.loggedIn);\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n                {routes.map(({path, component, privateRoute}, index) => {\n                    const route = <Route exact key={`${path}-${index}`} path={path} component={component} />\n                    if(!privateRoute || loggedIn) {\n                        return route;\n                    }\n                    return <Redirect to={\"login\"} key={`${path}-${index}`}/>\n                })}\n        </BrowserRouter>\n    )\n}\n","import {Button, Form, Toast} from \"react-bootstrap\"\nimport React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {getLogged, LOGIN_ACTIONS, setLogged} from \"./actions\";\nimport { useHistory } from \"react-router-dom\"\n\nexport const Login = () => {\n    const [username, setUsername] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n    const [error, setError] = React.useState(false)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    React.useEffect(() => {\n        if(getLogged()) {\n            dispatch(LOGIN_ACTIONS.LOGIN(\"\"))\n            history.replace(\"/dashboard\")\n        }\n    }, [])\n\n    const login = () => {\n        if (username === \"ramzi\" && password === \"1234\") {\n            setError(false)\n            dispatch(LOGIN_ACTIONS.LOGIN(username))\n            setLogged()\n            history.replace(\"/dashboard\")\n        } else {\n            setError(true)\n        }\n    }\n\n    return (\n        <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\n            {\n                error && <Toast style={{\n                    position: \"absolute\",\n                    bottom: 5,\n                    right: 5\n                }} show={error}>\n               <Toast.Body>{\"Wrong Credentials !\"}</Toast.Body>\n            </Toast>\n            }\n\n            <Form className=\"d-flex flex-column justify-content-center align-items-center border border-primary p-5\">\n                <img src=\"/logo192.png\"/>\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control value={username} type=\"username\"\n                                  onChange={e => setUsername(e.target.value)}\n                                  placeholder=\"Enter Username\" />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control  value={password} type=\"password\"\n                                   onChange={e => setPassword(e.target.value)}\n                                   onSubmit={login}\n                                   placeholder=\"Enter Password\" />\n                </Form.Group>\n\n                <Button variant=\"primary\"\n                        disabled={!username.length > 0 || !password.length > 0}\n                        onClick={login}\n                >\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {Provider} from \"react-redux\"\nimport store from \"./store\";\nimport {AppRouterContainer} from \"./router\";\n\nfunction App() {\n\n  return (\n      <Provider store={store}>\n        <div className=\"dashboardContainer\">\n        <AppRouterContainer/>\n        </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}